# Filtering the Data for 4 Gestures {Rest, HC, HO,IFE} for all Participants 43 of Session 1

import os
import numpy as np
import scipy.io

# Define the selected gestures by their indices (0-based)
selected_gestures_indices = [0, 1, 2, 16]  # Adjust with the correct indices

# Path to the original Session 1 folder
session1_folder_path = "Session 1"

# Path to the new folder for modified data
new_session1_folder_path = "New Session1"

# Create the new folder if it doesn't exist
os.makedirs(new_session1_folder_path, exist_ok=True)

# Iterate through each participant's file
for participant_id in range(1, 44):  # Assuming participants are numbered from 1 to 43
    # Construct the file paths
    input_file_path = f"{session1_folder_path}/session1_participant{participant_id}.mat"
    output_file_path = f"{new_session1_folder_path}/session1_participant{participant_id}.mat"

    # Check if the input file exists
    if os.path.exists(input_file_path):
        print(f"Processing data for participant {participant_id}...")

        # Load the .mat file
        mat_data = scipy.io.loadmat(input_file_path)

        # Access the 'DATA' structure within the .mat file
        data_structure = mat_data['DATA']

        # Initialize an empty list to store the selected gesture data
        selected_data_list = []

        # Iterate through the selected gestures and extract the data
        for trial_index in range(data_structure.shape[0]):
            if trial_index in selected_gestures_indices:
                # Extract the data for the current gesture
                gesture_data = data_structure[trial_index][0][0]

                # Append the data to the list
                selected_data_list.append(gesture_data)

        # Convert the list to a NumPy array
        selected_data = np.array(selected_data_list)

        # Save the modified data to the new folder
        new_mat_data = {'DATA': selected_data}
        scipy.io.savemat(output_file_path, new_mat_data)

        print(f"Data saved for participant {participant_id}\n")
    else:
        print(f"File not found for participant {participant_id}")

print("Processing completed.")
